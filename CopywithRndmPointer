"""
# Definition for a Node.
class Node:
    def __init__(self, x: int, next: 'Node' = None, random: 'Node' = None):
        self.val = int(x)
        self.next = next
        self.random = random
"""

class Solution:
    def copyRandomList(self, head: 'Optional[Node]') -> 'Optional[Node]':
        if not head:
            return None
        old=head
        di={None: None}
        while old:
            di[old]= Node(old.val)
            old=old.next
 
        old=head
        while old:
            di[old].next=di[old.next]
            di[old].random=di[old.random]
            old=old.next
        return di[head]   
n1 = Node(1)
n2 = Node(2)
n3 = Node(3)

n1.next = n2
n2.next = n3

# Random pointers:
n1.random = n3   # 1 -> 3
n2.random = n1   # 2 -> 1
n3.random = n2 
print(Solution().copyRandomList(n1))
