class Solution:
    def islandsAndTreasure(self, grid: List[List[int]]) -> None:
        queue = deque()
        m, n = len(grid), len(grid[0])
        directions = [(0,1), (1,0), (0,-1), (-1,0)]

        for i in range(m):
            for j in range(n):
                if grid[i][j] == 0:
                    queue.append((i, j,0))
        
        while queue:
            r,c,di=queue.popleft()
            for x,y in directions:
                if 0<=x+r<m and 0<=y+c<n and grid[x+r][y+c]!=-1 and grid[x+r][y+c]>di+1:
                    grid[x+r][y+c]=di+1
                    queue.append((x+r,y+c,di+1))
grid=[
  [2147483647,-1,0,2147483647],
  [2147483647,2147483647,2147483647,-1],
  [2147483647,-1,2147483647,-1],
  [0,-1,2147483647,2147483647]
]
print(Solution().islandsAndTreasure(grid))
