class Solution:
    def findItinerary(self, tickets: List[List[str]]) -> List[str]:
        adj=defaultdict(list)
        tickets.sort()
        for src, dst in tickets:
            adj[src].append(dst)

        res = ["JFK"]
        res = ["JFK"]

        def dfs(src):
            if len(res) == len(tickets) + 1:
                return True
            if src not in adj:
                return False

            for i in range(len(adj[src])):
                neigh = adj[src].pop(i)   # remove ticket
                res.append(neigh)

                if dfs(neigh):
                    return True  # found valid path

                # backtrack
                res.pop()
                adj[src].insert(i, neigh)

            return False

        dfs("JFK")
        return res
li=[["BUF","HOU"],["HOU","SEA"],["JFK","BUF"]]
print(Solution().findItinerary(li))


                    



                

        
            
        
        
