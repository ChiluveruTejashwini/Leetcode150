class Solution:
    def findCheapestPrice(self, n: int, flights: List[List[int]], src: int, dst: int, k: int) -> int:
        di = defaultdict(list)
        for u, v, w in flights:
            di[u].append((v, w))
        minheap=[(0,src,-1)]
        while minheap:
            cost,src,stops=heapq.heappop(minheap)
            if src==dst and stops<=k:
                return cost
            if stops>k:
                continue
            for neigh, weight in di[src]:
                heapq.heappush(minheap,(cost+weight,neigh,stops+1))
        return -1
solution = Solution()
flights = [[0,1,200],[1,2,100],[1,3,300],[2,3,100]] 
src = 0 
dst = 3
k = 1
result = solution.twoSum(n, flights, src, dst,k)
print(result)
