class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        res=set()
        candidates.sort()
        def dfs(i,li,s):
            if i==len(candidates):
                if s==target:
                    res.add(tuple(li.copy()))
                return
            if s>target:
                return
            li.append(candidates[i])
            dfs(i+1,li,s+candidates[i])
            li.pop()
            dfs(i+1,li,s)
            return
        dfs(0,[],0)
        return [list(s) for s in res]
candidates = [9,2,2,4,6,1,5] 
target = 8
print(Solution().combinationSum2(candidates,target))
        
