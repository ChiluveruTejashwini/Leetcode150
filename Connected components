class Solution:
    def countComponents(self, n: int, edges: List[List[int]]) -> int:

        di = defaultdict(list)
        for u, v in edges:
            di[u].append(v)
            di[v].append(u)

        visit=set()
        def dfs(node):
            visit.add(node)
            for neigh in di[node]:
                if neigh != node and neigh not in visit:
                    dfs(neigh)

        c=0
        for ele in range(n):
            if ele not in visit:
                dfs(ele)
                c+=1
        return c
n=6
edges=[[0,1], [1,2], [2,3], [4,5]]
print(Solution().countComponents(n,edges))



        
