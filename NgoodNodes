# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def goodNodes(self, root: TreeNode) -> int:
        if not root:
            return None
        res=[]
        def dfs(root,l,res,max_val):
            if not root:
                return
            l.append(root.val)
            if root.val >= max_val:
                res.append(1) 
                max_val = root.val
            dfs(root.left,l,res,max_val)
            
            dfs(root.right,l,res,max_val)
            l.pop()
        dfs(root,[],res,root.val)
        return sum(res)

root2 = TreeNode(-10)
root2.left = TreeNode(9)
root2.right = TreeNode(20)
root2.right.left = TreeNode(15)
root2.right.right = TreeNode(7)

print(Solution().goodNodes(root2))
